{
    // exclude or include bracket by language type (example: C++ for C++.tmLanguage)
    // Note: this is particularly useful with Angle. Some languages do not attribute any special scope to angle brackets making it hard
    // to tell when the bracket is beign used in a valid scenario.  C++ is a perfect example.  It is better to disable completely than
    // to ignore angle.  Ignoring will not show angle matches, but will also interfere with other bracket matches.
    "angle_language_list" : ["HTML","HTML 5","XML","PHP"],
    "tag_language_list"   : ["HTML","HTML 5","XML","PHP"],
    "quote_language_list" : [""],
    "curly_language_list" : [""],
    "round_language_list" : [""],
    "square_language_list": [""],

    //filter type (whitelist|blacklist)
    "angle_language_filter" : "whitelist",
    "tag_language_filter"   : "whitelist",
    "quote_language_filter" : "blacklist",
    "curly_language_filter" : "blacklist",
    "round_language_filter" : "blacklist",
    "square_language_filter": "blacklist",

    // Scope? (Defined in theme files.)
    // Examples: (keyword|string|number)
    "quote_scope" : "entity.name.class",
    "curly_scope" : "entity.name.class",
    "round_scope" : "entity.name.class",
    "square_scope": "entity.name.class",
    "angle_scope" : "entity.name.class",
    "tag_scope"   : "entity.name.class",

    // Outline? (solid|outline|underline|none)
    "quote_style" : "underline",
    "curly_style" : "underline",
    "round_style" : "underline",
    "square_style": "underline",
    "angle_style" : "underline",
    "tag_style"   : "underline",

    // Threshold distance to search
    "search_threshold"     : 1000,
    "tag_search_threshold" : 1000,
    "use_search_threshold"     : true,
    "tag_use_search_threshold" : true
}